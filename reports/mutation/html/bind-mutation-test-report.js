document.querySelector('mutation-test-report-app').report = {"files":{"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/ducks/ApplicationDucks/ModalTodoCreate/index.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":78,"line":4},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":2,"line":35},"start":{"column":89,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"8","location":{"end":{"column":4,"line":34},"start":{"column":11,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"9","location":{"end":{"column":6,"line":33},"start":{"column":17,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"10","location":{"end":{"column":18,"line":32},"start":{"column":13,"line":32}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"11","location":{"end":{"column":3,"line":47},"start":{"column":38,"line":37}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"12","location":{"end":{"column":2,"line":47},"start":{"column":88,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"13","location":{"end":{"column":4,"line":46},"start":{"column":11,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3","location":{"end":{"column":2,"line":19},"start":{"column":68,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"6","location":{"end":{"column":3,"line":35},"start":{"column":39,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"14","location":{"end":{"column":6,"line":45},"start":{"column":17,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4","location":{"end":{"column":3,"line":23},"start":{"column":36,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"5","location":{"end":{"column":2,"line":23},"start":{"column":66,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"15","location":{"end":{"column":17,"line":43},"start":{"column":13,"line":43}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2","location":{"end":{"column":3,"line":19},"start":{"column":37,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1","location":{"end":{"column":76,"line":5},"start":{"column":39,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":26,"line":44},"start":{"column":22,"line":44}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"17","location":{"end":{"column":2,"line":52},"start":{"column":16,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { IApplicationState } from 'ducks/ApplicationDucks';\n\n/* Action Types */\nexport const CLOSE_MODAL_TODO_CREATE = '@application/modals/TodoCreate/CLOSE';\nexport const OPEN_MODAL_TODO_CREATE = '@application/modals/TodoCreate/OPEN';\n\n/* Action Interfaces */\nexport interface ICloseModalTodoCreate {\n  type: string\n}\n\nexport interface IOpenModalTodoCreate {\n  type: string\n}\n\n/* Action Creators */\nexport const closeModalTodoCreate = () : ICloseModalTodoCreate => ({\n  type: CLOSE_MODAL_TODO_CREATE\n})\n\nexport const openModalTodoCreate = () : IOpenModalTodoCreate => ({\n  type: OPEN_MODAL_TODO_CREATE\n})\n\n/* Action Handlers */\nexport const onCloseModalTodoCreate = (state: IApplicationState): IApplicationState => ({\n  ...state,\n  modals: {\n    ...state.modals,\n    todoCreate: {\n      ...state.modals.todoCreate,\n      open: false\n    }\n  }\n})\n\nexport const onOpenModalTodoCreate = (state: IApplicationState): IApplicationState => ({\n  ...state,\n  modals: {\n    ...state.modals,\n    todoCreate: {\n      ...state.modals.todoCreate,\n      open: true,\n      alreadyOpened: true\n    }\n  }\n})\n\nexport default {\n  [CLOSE_MODAL_TODO_CREATE]: onCloseModalTodoCreate,\n  [OPEN_MODAL_TODO_CREATE]: onOpenModalTodoCreate\n}\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/ducks/ApplicationDucks/index.ts":{"language":"typescript","mutants":[{"id":"18","location":{"end":{"column":2,"line":19},"start":{"column":42,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"20","location":{"end":{"column":6,"line":17},"start":{"column":17,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"19","location":{"end":{"column":4,"line":18},"start":{"column":11,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"23","location":{"end":{"column":2,"line":23},"start":{"column":25,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"21","location":{"end":{"column":18,"line":15},"start":{"column":13,"line":15}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"22","location":{"end":{"column":27,"line":16},"start":{"column":22,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"24","location":{"end":{"column":48,"line":25},"start":{"column":16,"line":25}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import modalTodoCreateActionHandlers from './ModalTodoCreate';\n\nexport interface IApplicationState {\n  modals: {\n    todoCreate: {\n      open: boolean,\n      alreadyOpened: boolean\n    }\n  }\n}\n\nconst INITIAL_STATE: IApplicationState = {\n  modals: {\n    todoCreate: {\n      open: false,\n      alreadyOpened: false\n    }\n  }\n}\n\nconst ACTION_HANDLERS = {\n  ...modalTodoCreateActionHandlers\n}\n\nexport default [INITIAL_STATE, ACTION_HANDLERS]\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/ducks/TodosDucks/AddTodo/index.ts":{"language":"typescript","mutants":[{"id":"31","location":{"end":{"column":2,"line":36},"start":{"column":67,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Creators addTodoFailed returns a ADD_TODO_FAILED action"},{"id":"32","location":{"end":{"column":3,"line":41},"start":{"column":31,"line":38}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Action Creators addTodoSuccess returns a ADD_TODO_SUCCESS action"},{"id":"25","location":{"end":{"column":46,"line":5},"start":{"column":30,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Action Types CALL_ADD_TODO is defined as @todo/CALL_ADD"},{"id":"26","location":{"end":{"column":50,"line":6},"start":{"column":32,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Action Types ADD_TODO_FAILED is defined as @todo/ADD_FAILED"},{"id":"30","location":{"end":{"column":3,"line":36},"start":{"column":30,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Action Creators addTodoFailed returns a ADD_TODO_FAILED action"},{"id":"27","location":{"end":{"column":52,"line":7},"start":{"column":33,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Action Types ADD_TODO_SUCCESS is defined as @todo/ADD_SUCCESS"},{"id":"28","location":{"end":{"column":3,"line":31},"start":{"column":24,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Action Creators addTodo returns a CALL_ADD_TODO action"},{"id":"29","location":{"end":{"column":2,"line":31},"start":{"column":80,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Creators addTodo returns a CALL_ADD_TODO action"},{"id":"33","location":{"end":{"column":2,"line":41},"start":{"column":66,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Creators addTodoSuccess returns a ADD_TODO_SUCCESS action"},{"id":"35","location":{"end":{"column":2,"line":50},"start":{"column":68,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Handlers onCallAddTodo sets loading to true"},{"id":"34","location":{"end":{"column":3,"line":50},"start":{"column":30,"line":44}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Action Handlers onCallAddTodo sets loading to true"},{"id":"38","location":{"end":{"column":3,"line":58},"start":{"column":32,"line":52}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Action Handlers onAddTodoFailed sets loading to false"},{"id":"37","location":{"end":{"column":18,"line":48},"start":{"column":14,"line":48}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed","description":"Killed by: Action Handlers onCallAddTodo sets loading to true"},{"id":"36","location":{"end":{"column":4,"line":49},"start":{"column":12,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Handlers onCallAddTodo sets loading to true"},{"id":"40","location":{"end":{"column":4,"line":57},"start":{"column":12,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Handlers onAddTodoFailed sets loading to false"},{"id":"39","location":{"end":{"column":2,"line":58},"start":{"column":70,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Handlers onAddTodoFailed sets loading to false"},{"id":"44","location":{"end":{"column":32,"line":62},"start":{"column":9,"line":62}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed","description":"Killed by: Action Handlers onAddTodoSuccess sets loading to false and appends todo to data"},{"id":"42","location":{"end":{"column":3,"line":67},"start":{"column":33,"line":60}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Action Handlers onAddTodoSuccess sets loading to false and appends todo to data"},{"id":"41","location":{"end":{"column":19,"line":56},"start":{"column":14,"line":56}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: Action Handlers onAddTodoFailed sets loading to false"},{"id":"43","location":{"end":{"column":2,"line":67},"start":{"column":98,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Handlers onAddTodoSuccess sets loading to false and appends todo to data"},{"id":"46","location":{"end":{"column":19,"line":65},"start":{"column":14,"line":65}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: Action Handlers onAddTodoSuccess sets loading to false and appends todo to data"},{"id":"45","location":{"end":{"column":4,"line":66},"start":{"column":12,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Action Handlers onAddTodoSuccess sets loading to false and appends todo to data"},{"id":"47","location":{"end":{"column":2,"line":73},"start":{"column":16,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Export Action Types with Handlers"}],"source":"import { ITodosState } from 'ducks/TodosDucks';\nimport Todo from 'classes/Todo';\n\n/* Action Types */\nexport const CALL_ADD_TODO = '@todo/CALL_ADD';\nexport const ADD_TODO_FAILED = '@todo/ADD_FAILED';\nexport const ADD_TODO_SUCCESS = '@todo/ADD_SUCCESS';\n\n/* Action Interfaces */\nexport interface ICallAddTodo {\n  type: string,\n  title: string,\n  description: string\n}\n\nexport interface IAddTodoFailed {\n  type: string,\n  error: string\n}\n\nexport interface IAddTodoSuccess {\n  type: string,\n  todo: Todo\n}\n\n/* Action Creators */\nexport const addTodo = (title: string, description: string) : ICallAddTodo => ({\n  type: CALL_ADD_TODO,\n  title,\n  description\n})\n\nexport const addTodoFailed = (error: string) : IAddTodoFailed => ({\n  type: ADD_TODO_FAILED,\n  error\n})\n\nexport const addTodoSuccess = (todo: Todo) : IAddTodoSuccess => ({\n  type: ADD_TODO_SUCCESS,\n  todo\n})\n\n/* Action Handlers */\nexport const onCallAddTodo = (state: ITodosState): ITodosState => ({\n  ...state,\n  loading: {\n    ...state.loading,\n    addTodo: true\n  }\n})\n\nexport const onAddTodoFailed = (state: ITodosState): ITodosState => ({\n  ...state,\n  loading: {\n    ...state.loading,\n    addTodo: false\n  }\n})\n\nexport const onAddTodoSuccess = (state: ITodosState, { todo }: IAddTodoSuccess): ITodosState => ({\n  ...state,\n  data: [ ...state.data, todo ],\n  loading: {\n    ...state.loading,\n    addTodo: false\n  }\n})\n\nexport default {\n  [CALL_ADD_TODO]: onCallAddTodo,\n  [ADD_TODO_FAILED]: onAddTodoFailed,\n  [ADD_TODO_SUCCESS]: onAddTodoSuccess\n}\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/ducks/TodosDucks/RemoveTodo/index.ts":{"language":"typescript","mutants":[{"id":"48","location":{"end":{"column":52,"line":4},"start":{"column":33,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"49","location":{"end":{"column":56,"line":5},"start":{"column":35,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"51","location":{"end":{"column":3,"line":29},"start":{"column":27,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"50","location":{"end":{"column":58,"line":6},"start":{"column":36,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"52","location":{"end":{"column":2,"line":29},"start":{"column":66,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"53","location":{"end":{"column":3,"line":35},"start":{"column":33,"line":31}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"54","location":{"end":{"column":2,"line":35},"start":{"column":89,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":3,"line":40},"start":{"column":34,"line":37}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"56","location":{"end":{"column":2,"line":40},"start":{"column":76,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"57","location":{"end":{"column":3,"line":52},"start":{"column":33,"line":43}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"59","location":{"end":{"column":4,"line":51},"start":{"column":12,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"58","location":{"end":{"column":2,"line":52},"start":{"column":100,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"61","location":{"end":{"column":3,"line":60},"start":{"column":35,"line":54}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"60","location":{"end":{"column":6,"line":50},"start":{"column":17,"line":47}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"66","location":{"end":{"column":68,"line":58},"start":{"column":55,"line":58}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"65","location":{"end":{"column":68,"line":58},"start":{"column":55,"line":58}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"64","location":{"end":{"column":68,"line":58},"start":{"column":49,"line":58}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"63","location":{"end":{"column":4,"line":59},"start":{"column":12,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"67","location":{"end":{"column":68,"line":58},"start":{"column":55,"line":58}},"mutatorName":"EqualityOperator","replacement":"id === todoId","status":"Survived"},{"id":"62","location":{"end":{"column":2,"line":60},"start":{"column":104,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"68","location":{"end":{"column":3,"line":69},"start":{"column":36,"line":62}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"69","location":{"end":{"column":2,"line":69},"start":{"column":106,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"70","location":{"end":{"column":53,"line":64},"start":{"column":27,"line":64}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"72","location":{"end":{"column":53,"line":64},"start":{"column":35,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"73","location":{"end":{"column":53,"line":64},"start":{"column":35,"line":64}},"mutatorName":"EqualityOperator","replacement":"todo.id === todoId","status":"Survived"},{"id":"71","location":{"end":{"column":53,"line":64},"start":{"column":35,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"74","location":{"end":{"column":4,"line":68},"start":{"column":12,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"75","location":{"end":{"column":68,"line":67},"start":{"column":49,"line":67}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"76","location":{"end":{"column":68,"line":67},"start":{"column":55,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"77","location":{"end":{"column":68,"line":67},"start":{"column":55,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"78","location":{"end":{"column":68,"line":67},"start":{"column":55,"line":67}},"mutatorName":"EqualityOperator","replacement":"id === todoId","status":"Survived"},{"id":"79","location":{"end":{"column":2,"line":75},"start":{"column":16,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { ITodosState } from 'ducks/TodosDucks';\n\n/* Action Types */\nexport const CALL_REMOVE_TODO = '@todo/CALL_REMOVE';\nexport const REMOVE_TODO_FAILED = '@todo/REMOVE_FAILED';\nexport const REMOVE_TODO_SUCCESS = '@todo/REMOVE_SUCCESS';\n\n/* Action Interfaces */\nexport interface ICallRemoveTodo {\n  type: string,\n  todoId: string\n}\n\nexport interface IRemoveTodoFailed {\n  type: string,\n  todoId: string,\n  error: string\n}\n\nexport interface IRemoveTodoSuccess {\n  type: string,\n  todoId: string\n}\n\n/* Action Creators */\nexport const removeTodo = (todoId: string) : ICallRemoveTodo => ({\n  type: CALL_REMOVE_TODO,\n  todoId\n})\n\nexport const removeTodoFailed = (todoId: string, error: string) : IRemoveTodoFailed => ({\n  type: REMOVE_TODO_FAILED,\n  todoId,\n  error\n})\n\nexport const removeTodoSuccess = (todoId: string) : IRemoveTodoSuccess => ({\n  type: REMOVE_TODO_SUCCESS,\n  todoId\n})\n\n/* Action Handlers */\nexport const onCallRemoveTodo = (state: ITodosState, { todoId }: ICallRemoveTodo): ITodosState => ({\n  ...state,\n  loading: {\n    ...state.loading,\n    removeTodo: [\n      ...state.loading.removeTodo,\n      todoId\n    ]\n  }\n})\n\nexport const onRemoveTodoFailed = (state: ITodosState, { todoId }: IRemoveTodoFailed): ITodosState => ({\n  ...state,\n  loading: {\n    ...state.loading,\n    removeTodo: state.loading.removeTodo.filter(id => id !== todoId)\n  }\n})\n\nexport const onRemoveTodoSuccess = (state: ITodosState, { todoId }: IRemoveTodoSuccess): ITodosState => ({\n  ...state,\n  data: state.data.filter(todo => todo.id !== todoId),\n  loading: {\n    ...state.loading,\n    removeTodo: state.loading.removeTodo.filter(id => id !== todoId)\n  }\n})\n\nexport default {\n  [CALL_REMOVE_TODO]: onCallRemoveTodo,\n  [REMOVE_TODO_FAILED]: onRemoveTodoFailed,\n  [REMOVE_TODO_SUCCESS]: onRemoveTodoSuccess\n}\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/ducks/TodosDucks/index.ts":{"language":"typescript","mutants":[{"id":"80","location":{"end":{"column":2,"line":24},"start":{"column":36,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"81","location":{"end":{"column":4,"line":19},"start":{"column":9,"line":15}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"82","location":{"end":{"column":52,"line":16},"start":{"column":14,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"83","location":{"end":{"column":77,"line":16},"start":{"column":54,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"84","location":{"end":{"column":108,"line":16},"start":{"column":79,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"87","location":{"end":{"column":99,"line":17},"start":{"column":83,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"86","location":{"end":{"column":81,"line":17},"start":{"column":54,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"85","location":{"end":{"column":52,"line":17},"start":{"column":14,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"89","location":{"end":{"column":86,"line":18},"start":{"column":54,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"88","location":{"end":{"column":52,"line":18},"start":{"column":14,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"90","location":{"end":{"column":103,"line":18},"start":{"column":88,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"91","location":{"end":{"column":4,"line":23},"start":{"column":12,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"93","location":{"end":{"column":19,"line":22},"start":{"column":17,"line":22}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"92","location":{"end":{"column":19,"line":21},"start":{"column":14,"line":21}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"94","location":{"end":{"column":2,"line":29},"start":{"column":25,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"95","location":{"end":{"column":48,"line":31},"start":{"column":16,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import Todo from 'classes/Todo';\n\nimport addTodoActionHandlers from './AddTodo';\nimport removeTodoActionHandlers from './RemoveTodo';\n\nexport interface ITodosState {\n  data: Todo[],\n  loading: {\n    addTodo: boolean,\n    removeTodo: Array<string>\n  }\n}\n\nconst INITIAL_STATE: ITodosState = {\n  data: [\n    new Todo('3d04b772-e887-4f20-a273-74ce5fbaf2e6', 'Criar base do projeto', 'Utilizar o Create React App'),\n    new Todo('2ef6b1c7-f472-4036-a3b5-992444261104', 'Criar estrutura do estado', 'Utilizar Redux'),\n    new Todo('1c2b7538-b5a4-4aff-80ee-cef248ca3007', 'Criar controle de side effects', 'Utilizar Saga')\n  ],\n  loading: {\n    addTodo: false,\n    removeTodo: []\n  }\n}\n\nconst ACTION_HANDLERS = {\n  ...addTodoActionHandlers,\n  ...removeTodoActionHandlers,\n}\n\nexport default [INITIAL_STATE, ACTION_HANDLERS]\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/ducks/index.ts":{"language":"typescript","mutants":[{"id":"96","location":{"end":{"column":8,"line":17},"start":{"column":23,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"97","location":{"end":{"column":8,"line":17},"start":{"column":64,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"98","location":{"end":{"column":8,"line":17},"start":{"column":3,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"99","location":{"end":{"column":8,"line":17},"start":{"column":3,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"100","location":{"end":{"column":8,"line":17},"start":{"column":3,"line":16}},"mutatorName":"LogicalOperator","replacement":"actionHandlers[action.type] && actionHandlers[action.type](state, action) && state","status":"Survived"},{"id":"101","location":{"end":{"column":77,"line":16},"start":{"column":4,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"102","location":{"end":{"column":77,"line":16},"start":{"column":4,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"103","location":{"end":{"column":77,"line":16},"start":{"column":4,"line":16}},"mutatorName":"LogicalOperator","replacement":"actionHandlers[action.type] || actionHandlers[action.type](state, action)","status":"Survived"},{"id":"104","location":{"end":{"column":5,"line":23},"start":{"column":27,"line":19}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"105","location":{"end":{"column":4,"line":23},"start":{"column":19,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { combineReducers } from 'redux';\n\n/* Ducks */\nimport ApplicationDucks, { IApplicationState } from './ApplicationDucks';\nimport TodosDucks, { ITodosState } from './TodosDucks';\n\nexport interface IRootState {\n  application: IApplicationState,\n  todos: ITodosState\n}\n\nconst createReducer = ([initialState, actionHandlers]: any) => (\n  state = initialState,\n  action: any\n) =>\n  (actionHandlers[action.type] && actionHandlers[action.type](state, action)) ||\n  state;\n\nconst createRootReducer = () =>\n  combineReducers({\n    application: createReducer(ApplicationDucks),\n    todos: createReducer(TodosDucks)\n  });\n\nexport default createRootReducer;\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/sagas/TodosSagas/AddTodo/index.ts":{"language":"typescript","mutants":[{"id":"107","location":{"end":{"column":4,"line":19},"start":{"column":7,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Add todo saga Fail dispatches addTodoFailed if API throws error"},{"id":"106","location":{"end":{"column":2,"line":23},"start":{"column":64,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Add todo saga Fail dispatches addTodoFailed if API throws error"},{"id":"108","location":{"end":{"column":47,"line":18},"start":{"column":21,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Add todo saga Success shows success message"},{"id":"109","location":{"end":{"column":4,"line":22},"start":{"column":19,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Add todo saga Fail dispatches addTodoFailed if API throws error"},{"id":"110","location":{"end":{"column":49,"line":21},"start":{"column":19,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Add todo saga Fail shows fail message"},{"id":"111","location":{"end":{"column":2,"line":27},"start":{"column":33,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Add todo saga calls addTodo every CALL_ADD_TODO actions"},{"id":"112","location":{"end":{"column":2,"line":31},"start":{"column":29,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: rootSaga fork addTodoSagas"},{"id":"113","location":{"end":{"column":33,"line":30},"start":{"column":13,"line":30}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed","description":"Killed by: rootSaga fork addTodoSagas"}],"source":"import { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\nimport { message } from \"antd\";\nimport {\n  CALL_ADD_TODO,\n  ICallAddTodo,\n  addTodoSuccess,\n  addTodoFailed,\n} from \"ducks/TodosDucks/AddTodo\";\nimport TodosAPI from \"integrations/TodosAPI\";\nimport Todo from \"classes/Todo\";\n\nexport function* addTodo({ title, description }: ICallAddTodo) {\n  try {\n    const todoId = yield call(TodosAPI.addTodo, title, description);\n    const todo = new Todo(todoId, title, description);\n\n    yield put(addTodoSuccess(todo));\n    message.success(\"Todo added successfully!\");\n  } catch (error) {\n    yield put(addTodoFailed(error));\n    message.error(\"The todo could not be added!\");\n  }\n}\n\nexport function* addTodoSagas() {\n  yield takeEvery(CALL_ADD_TODO, addTodo);\n}\n\nexport default function* () {\n  yield all([fork(addTodoSagas)]);\n}\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/sagas/TodosSagas/RemoveTodo/index.ts":{"language":"typescript","mutants":[{"id":"114","location":{"end":{"column":2,"line":19},"start":{"column":51,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"115","location":{"end":{"column":4,"line":14},"start":{"column":7,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"116","location":{"end":{"column":49,"line":13},"start":{"column":21,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"117","location":{"end":{"column":4,"line":18},"start":{"column":17,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":51,"line":17},"start":{"column":19,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"119","location":{"end":{"column":2,"line":23},"start":{"column":29,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"120","location":{"end":{"column":2,"line":29},"start":{"column":29,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"121","location":{"end":{"column":4,"line":28},"start":{"column":13,"line":26}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\nimport { message } from 'antd';\nimport {\n  CALL_REMOVE_TODO, ICallRemoveTodo,\n  removeTodoFailed, removeTodoSuccess\n} from 'ducks/TodosDucks/RemoveTodo';\nimport TodosAPI from 'integrations/TodosAPI';\n\nfunction* removeTodo({ todoId }: ICallRemoveTodo) {\n  try {\n    yield call(TodosAPI.removeTodo, todoId)\n    yield put(removeTodoSuccess(todoId))\n    message.success('Todo removed successfully!')\n  }\n  catch (error) {\n    yield put(removeTodoFailed(todoId, error))\n    message.error('The todo could not be removed!')\n  }\n}\n\nfunction* removeTodoSagas() {\n  yield takeEvery(CALL_REMOVE_TODO, removeTodo)\n}\n\nexport default function* () {\n  yield all([\n    fork(removeTodoSagas)\n  ])\n}\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/sagas/TodosSagas/index.ts":{"language":"typescript","mutants":[{"id":"123","location":{"end":{"column":4,"line":9},"start":{"column":13,"line":6}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"122","location":{"end":{"column":2,"line":10},"start":{"column":29,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { all, fork } from 'redux-saga/effects';\nimport addTodoSagas from './AddTodo';\nimport removeTodoSagas from './RemoveTodo';\n\nexport default function* () {\n  yield all([\n    fork(addTodoSagas),\n    fork(removeTodoSagas)\n  ])\n}\n"},"/home/mmorais/Documents/react-redux-saga-typescript-todo/src/sagas/index.ts":{"language":"typescript","mutants":[{"id":"124","location":{"end":{"column":2,"line":8},"start":{"column":28,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"125","location":{"end":{"column":4,"line":7},"start":{"column":13,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { all, fork } from 'redux-saga/effects';\nimport TodosSagas from './TodosSagas';\n\nexport default function*() {\n  yield all([\n    fork(TodosSagas)\n  ]);\n}\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};